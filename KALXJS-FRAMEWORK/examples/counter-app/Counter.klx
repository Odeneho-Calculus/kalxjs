<template>
  <div class="counter">
    <h1>{{ title }}</h1>
    <div class="count">{{ count.value }}</div>
    <div class="buttons">
      <button @click="decrement">-</button>
      <button @click="increment">+</button>
    </div>
    <p>This counter was clicked {{ count.value }} times.</p>
  </div>
</template>

<script>
import { useRef, useComputed, watch, onMounted } from '@kalxjs/core';

export default {
  name: 'Counter',
  props: {
    title: {
      type: String,
      default: 'KalxJS Counter'
    },
    initialCount: {
      type: Number,
      default: 0
    }
  },
  setup(props) {
    // Reactive state
    const count = useRef(props.initialCount);
    
    // Computed property
    const doubleCount = useComputed(() => count.value * 2);
    
    // Methods
    function increment() {
      count.value++;
    }
    
    function decrement() {
      count.value--;
    }
    
    // Watch for changes
    watch(count, (newValue, oldValue) => {
      console.log(`Count changed from ${oldValue} to ${newValue}`);
    });
    
    // Lifecycle hooks
    onMounted(() => {
      console.log('Counter component mounted');
    });
    
    // Expose to template
    return {
      count,
      doubleCount,
      increment,
      decrement
    };
  }
};
</script>

<style scoped>
.counter {
  font-family: Arial, sans-serif;
  max-width: 300px;
  margin: 0 auto;
  padding: 20px;
  text-align: center;
  border: 1px solid #eee;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

h1 {
  color: #42b883;
  margin-bottom: 20px;
}

.count {
  font-size: 48px;
  font-weight: bold;
  color: #35495e;
  margin: 20px 0;
}

.buttons {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-bottom: 20px;
}

button {
  background-color: #42b883;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 8px 16px;
  font-size: 18px;
  cursor: pointer;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #33a06f;
}

p {
  color: #666;
  font-size: 14px;
}
</style>