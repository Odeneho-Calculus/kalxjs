Bug Report: Missing createAIManager Function in KalxJS Framework
Issue Description
The KalxJS CLI template generates code that imports a non - existent createAIManager function from the @kalxjs/ai or @kalxjs/core packages.This causes runtime errors when trying to use AI features in a KalxJS application.

    Details
The CLI template(@kalxjs / cli / src / commands / create.js) generates an aiManager.js file that imports createAIManager which doesn't exist in any package
The template suggests importing from @kalxjs/core or @kalxjs/ai, but neither package exports this function
    This creates a broken reference that prevents the AI features from working
Reproduction Steps
Create a new KalxJS application using the CLI
Try to use the AI features referenced in the generated code
Observe runtime errors about missing createAIManager function
    Current Workaround
I've implemented a workaround by rewriting the aiManager.js file to use the actual functions exported by the @kalxjs/ai package:

import { configure, generateText as aiGenerateText, useAI } from '@kalxjs/ai';

// Configure the AI service
configure({
    apiKey: process.env.OPENAI_API_KEY || '',
    endpoint: 'https://api.openai.com/v1',
    model: 'gpt-3.5-turbo',
    maxTokens: 1000,
    temperature: 0.7
});

// Helper functions for common AI tasks
export async function generateText(prompt, options = {}) {
    return aiGenerateText(prompt, {
        model: options.model || 'gpt-3.5-turbo',
        maxTokens: options.max_length || 100,
        temperature: options.temperature || 0.7,
        ...options
    });
}

// Create a hook for AI functionality
export function useAIHelper(options = {}) {
    return useAI(options);
}

// Export other AI utilities
export { useAI } from '@kalxjs/ai';
Proposed Solutions
Option 1: Add createAIManager to the @kalxjs/ai package
Implement the missing function in the @kalxjs/ai package to match the expected API in the template:

// In @kalxjs/ai/src/index.js
export function createAIManager(options = {}) {
    // Configure with provided options
    configure(options.apiKeys?.openai ? {
        apiKey: options.apiKeys.openai,
        model: options.defaultOptions?.model || 'gpt-3.5-turbo',
        maxTokens: options.defaultOptions?.max_length || 1000,
        temperature: options.defaultOptions?.temperature || 0.7
    } : options);

    return {
        generateText: async ({ prompt, model, provider, options = {} }) => {
            return generateText(prompt, {
                model: model || options.model || 'gpt-3.5-turbo',
                ...options
            });
        },
        // Add other methods as needed
        generateImage: async ({ prompt, model, provider, options = {} }) => {
            // Implement or throw a "not implemented" error
            throw new Error('Image generation not implemented');
        }
    };
}
Option 2: Update the CLI template
Modify the CLI template to use the actual API provided by the @kalxjs/ai package:

// In @kalxjs/cli/src/commands/create.js
files['src/ai/aiManager.js'] = `import { configure, generateText as aiGenerateText, useAI } from '@kalxjs/ai';

// Configure the AI service
configure({
  apiKey: process.env.OPENAI_API_KEY || '',
  endpoint: 'https://api.openai.com/v1',
  model: 'gpt-3.5-turbo',
  maxTokens: 1000,
  temperature: 0.7
});

// Helper functions for common AI tasks
export async function generateText(prompt, options = {}) {
  return aiGenerateText(prompt, {
    model: options.model || 'gpt-3.5-turbo',
    maxTokens: options.max_length || 100,
    temperature: options.temperature || 0.7,
    ...options
  });
}

// Create a hook for AI functionality
export function useAIHelper(options = {}) {
  return useAI(options);
}

// Export other AI utilities
export { useAI } from '@kalxjs/ai';`;
Additional Notes
The @kalxjs/ai package provides a good foundation with functions like configure, generateText, and useAI
The current implementation focuses on text generation with OpenAI's API
If image generation is planned as advertised in the template, it should be implemented in the @kalxjs/ai package
This issue should be addressed to ensure a smooth developer experience when using the AI features of the KalxJS framework.