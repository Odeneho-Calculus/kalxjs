<template>
  <div class="welcome-container">
    <div class="welcome-header">
      <img src="/src/assets/logo.svg" alt="KalxJS Logo" class="welcome-logo" />
      <h1>Welcome to <span class="brand-name">KalxJS</span></h1>
    </div>
    
    <div class="welcome-content">
      <p class="welcome-message">
        Congratulations! You haveve successfully created a new KalxJS project with .klx components!
      </p>
      
      <div class="feature-grid">
        <!-- Feature cards will be dynamically inserted here -->
      </div>
      
      <div class="counter-demo">
        <h2>Try the Counter Demo</h2>
        <div class="counter-value" id="counter-value">0</div>
        <div class="counter-buttons">
          <button id="decrement-button" class="counter-button" onclick="decrementCounter()">-</button>
          <button id="reset-button" class="counter-button reset" onclick="resetCounter()">Reset</button>
          <button id="increment-button" class="counter-button" onclick="incrementCounter()">+</button>
        </div>
        <div class="counter-info">
          <div class="stat-item">
            <div class="stat-label">Double Count:</div>
            <div class="stat-value" id="double-count">0</div>
          </div>
          
          <div class="stat-item">
            <div class="stat-label">Is Even:</div>
            <div class="stat-value" id="is-even">Yes</div>
          </div>
        </div>
      </div>
      
      <div class="getting-started">
        <h2>Getting Started</h2>
        <div class="code-block">
          <pre><code>
// Create a new KalxJS project
npm init kalx my-app

// Start the development server
cd my-app
npm run dev
          </code></pre>
        </div>
        
        <div class="links-section">
          <h3>Essential Links</h3>
          <div class="links-grid">
            <a href="https://github.com/Odeneho-Calculus/kalxjs" target="_blank" class="link-card">
              <span class="link-icon">üìö</span>
              <span class="link-text">Documentation</span>
            </a>
            <a href="https://github.com/Odeneho-Calculus/kalxjs/examples" target="_blank" class="link-card">
              <span class="link-icon">üîç</span>
              <span class="link-text">Examples</span>
            </a>
            <a href="https://github.com/Odeneho-Calculus/kalxjs" target="_blank" class="link-card">
              <span class="link-icon">üíª</span>
              <span class="link-text">GitHub</span>
            </a>
            <a href="https://github.com/Odeneho-Calculus/kalxjs/issues" target="_blank" class="link-card">
              <span class="link-icon">üêû</span>
              <span class="link-text">Report Bug</span>
            </a>
          </div>
        </div>
      </div>
    </div>
    
    <footer class="welcome-footer">
      <p>Made with ‚ù§Ô∏è by the KalxJS Team</p>
    </footer>
  </div>
</template>

<script>
// Simple counter functionality
let count = 0;

function updateCounter() {
  const counterValue = document.getElementById('counter-value');
  const doubleCount = document.getElementById('double-count');
  const isEven = document.getElementById('is-even');
  
  if (counterValue) {
    counterValue.textContent = count;
    
    // Add animation class
    counterValue.classList.add('updated');
    setTimeout(() => {
      counterValue.classList.remove('updated');
    }, 300);
  }
  
  if (doubleCount) {
    doubleCount.textContent = count * 2;
  }
  
  if (isEven) {
    isEven.textContent = count % 2 === 0 ? 'Yes' : 'No';
  }
}

function incrementCounter() {
  count++;
  updateCounter();
}

function decrementCounter() {
  count--;
  updateCounter();
}

function resetCounter() {
  count = 0;
  updateCounter();
}

// Initialize when the component is loaded
document.addEventListener('DOMContentLoaded', () => {
  console.log('Welcome component loaded');
  
  // Render the features dynamically
  const features = [
    {
      icon: 'üìù',
      title: 'Template-Based Rendering',
      description: 'Use HTML templates directly with no virtual DOM overhead'
    },
    {
      icon: '‚ö°',
      title: 'Reactive State',
      description: 'Powerful state management with automatic DOM updates'
    },
    {
      icon: 'üß©',
      title: 'Component System',
      description: 'Create reusable components with clean APIs'
    },
    {
      icon: 'üîÑ',
      title: 'Routing',
      description: 'Seamless navigation between different views'
    }
  ];
  
  const featureGrid = document.querySelector('.feature-grid');
  if (featureGrid) {
    featureGrid.innerHTML = '';
    
    features.forEach(feature => {
      const card = document.createElement('div');
      card.className = 'feature-card';
      card.innerHTML = `
        <h3>${feature.icon} ${feature.title}</h3>
        <p>${feature.description}</p>
      `;
      featureGrid.appendChild(card);
    });
  }
  
  updateCounter();
});

// Make functions available globally
window.incrementCounter = incrementCounter;
window.decrementCounter = decrementCounter;
window.resetCounter = resetCounter;
</script>

<style>
.welcome-container {
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem;
  font-family: Arial, sans-serif;
}

.welcome-header {
  text-align: center;
  margin-bottom: 2rem;
}

.welcome-logo {
  width: 100px;
  height: auto;
  margin-bottom: 1rem;
}

.brand-name {
  color: #42b883;
  font-weight: bold;
}

.welcome-content {
  background-color: #f9f9f9;
  border-radius: 8px;
  padding: 2rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.welcome-message {
  font-size: 1.2rem;
  text-align: center;
  margin-bottom: 2rem;
}

.feature-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.feature-card {
  background-color: white;
  padding: 1.5rem;
  border-radius: 6px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.feature-card h3 {
  color: #42b883;
  margin-top: 0;
}

.counter-demo {
  background-color: white;
  padding: 2rem;
  border-radius: 8px;
  text-align: center;
  margin-top: 2rem;
}

.counter-value {
  font-size: 4rem;
  font-weight: bold;
  color: #42b883;
  margin: 1rem 0;
}

.counter-buttons {
  margin: 1rem 0;
  display: flex;
  justify-content: center;
  gap: 1rem;
}

.counter-button {
  background-color: #42b883;
  color: white;
  border: none;
  border-radius: 50%;
  font-size: 1.5rem;
  width: 50px;
  height: 50px;
  cursor: pointer;
}

.counter-button.reset {
  background-color: #7f8c8d;
  font-size: 0.9rem;
}

.counter-info {
  display: flex;
  justify-content: center;
  gap: 2rem;
  margin-top: 1rem;
}

.stat-item {
  text-align: center;
}

.stat-label {
  font-size: 0.9rem;
  color: #666;
  margin-bottom: 0.5rem;
}

.stat-value {
  font-size: 1.5rem;
  font-weight: bold;
  color: #35495e;
}

.getting-started {
  margin-top: 3rem;
  padding-top: 2rem;
  border-top: 1px solid #eee;
}

.code-block {
  background-color: #282c34;
  border-radius: 6px;
  padding: 1.5rem;
  margin: 1.5rem 0;
  overflow-x: auto;
}

.code-block pre {
  margin: 0;
}

.code-block code {
  color: #abb2bf;
  font-family: 'Courier New', monospace;
  font-size: 0.9rem;
}

.links-section {
  margin-top: 2rem;
}

.links-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 1rem;
  margin-top: 1rem;
}

.link-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  background-color: white;
  border-radius: 6px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  text-decoration: none;
  color: #35495e;
  transition: transform 0.2s;
}

.link-card:hover {
  transform: translateY(-3px);
}

.link-icon {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
}

.link-text {
  font-weight: bold;
}

.welcome-footer {
  text-align: center;
  margin-top: 3rem;
  color: #7f8c8d;
  font-size: 0.9rem;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.counter-value.updated {
  animation: pulse 0.3s ease;
}
</style>